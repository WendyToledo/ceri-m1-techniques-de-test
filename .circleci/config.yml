version: 2.1

orbs:
  codecov: codecov/codecov@4.0.1

jobs:
  build-and-test:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout

      - run:
          name: Build the project
          command: |
            cd TP1
            mvn -B -DskipTests clean package

      - run:
          name: Run Unit Tests and Generate Coverage Report
          command: |
            cd TP1
            mvn clean test jacoco:report

      - codecov/upload:
          file: ./TP1/target/site/jacoco/jacoco.xml

      - store_artifacts:
          path: TP1/target/site/jacoco
          destination: jacoco-report

      - persist_to_workspace:
          root: .
          paths:
            - TP1/target/site/jacoco

  generate-javadoc:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Generate Javadoc
          command: |
            cd TP1
            mvn javadoc:javadoc
      - run:
          name: Publish Javadoc to GitHub Pages
          command: |
            cd TP1
            mkdir -p docs
            cp -r target/site/apidocs/* docs/
            git config --global user.name "circleci"
            git config --global user.email "circleci@example.com"
            git add -A
            git commit -m "Update Javadoc"
            git push --force https://x-access-token:${DOC_TOKEN}@github.com/WendyToledo/ceri-m1-techniques-de-test.git HEAD:gh-pages
      - store_artifacts:
          path: TP1/target/site/apidocs
          destination: javadoc
      - persist_to_workspace:
          root: .
          paths:
            - TP1/target/site/apidocs

  checkstyle:
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Run Checkstyle
          command: |
            cd TP1
            mvn checkstyle:checkstyle
      - store_artifacts:
          path: TP1/target/site/checkstyle.html
          destination: checkstyle-report

workflows:
  version: 2
  build-and-check:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: master
      - generate-javadoc:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
      - checkstyle:
          requires:
            - build-and-test
          filters:
            branches:
              only: master
